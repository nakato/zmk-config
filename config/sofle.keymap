/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#include "nice_view.dtsi"

#define ENGRAM 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3
#define QWERTY 4
#define BROWSER 5
#define FUBAR 6

/ {

   // Activate ADJUST layer by pressing raise and lower
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    macros {
        web_close: web_close {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp W>
                , <&macro_release &kp LCTRL>;
        };

        web_prev: web_prev {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp PG_UP>
                , <&macro_release &kp LCTRL>;
        };

        web_next: web_next {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp PG_DN>
                , <&macro_release &kp LCTRL>;
        };

        web_m_prev: web_m_prev {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL &kp LSHFT>
                , <&macro_tap &kp PG_UP>
                , <&macro_release &kp LCTRL &kp LSHFT>;
        };

        web_m_next: web_m_next {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL &kp LSHFT>
                , <&macro_tap &kp PG_DN>
                , <&macro_release &kp LCTRL &kp LSHFT>;
        };
    };

    behaviors {
        invqt: invert_quote {
            compatible = "zmk,behavior-mod-morph";
            label = "INVERT_QUOTE";
            #binding-cells = <0>;
            bindings = <&kp DOUBLE_QUOTES>, <&kp SINGLE_QUOTE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        edot: engram_dot {
            compatible = "zmk,behavior-mod-morph";
            label = "ENGRAM_DOT";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ecomm: engram_comma {
            compatible = "zmk,behavior-mod-morph";
            label = "ENGRAM_COMMA";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMICOLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        eexcl: engram_exclamation {
            compatible = "zmk,behavior-mod-morph";
            label = "ENGRAM_EXCLAMATION";
            #binding-cells = <0>;
            bindings = <&kp EXCLAMATION>, <&kp QUESTION>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        eslash: engram_slash {
            compatible = "zmk,behavior-mod-morph";
            label = "ENGRAM_SLASH";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp BACKSLASH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
	};
    };

    keymap {
        compatible = "zmk,keymap";

        engram_layer {
            label = "ENGRAM";
// ------------------------------------------------------------------------------------------------------------
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
// |  ESC  |  B  |  Y  |  O   |  U   |  "'  |                   |  Z   |  L    |  D    |  W   |   V   | BKSPC |
// |  TAB  |  C  |  I  |  E   |  A   |  ,;  |                   |  .:  |  H    |  T    |  S   |   N   | /\    |
// | SHIFT |  G  |  X  |  J   |  K   |  !?  |  MUTE  |  |       |  Q   |  R    |  M    |  F   |   P   | SHIFT |
//               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
&kp GRAVE &kp N1 &kp N2   &kp N3   &kp N4    &kp N5                           &kp N6 &kp N7    &kp N8    &kp N9   &kp N0   &none
&kp ESC   &kp B  &kp Y    &kp O    &kp U     &kp SQT                          &kp Z  &kp L     &kp D     &kp W    &kp V    &kp BSPC
&kp TAB   &kp C  &kp I    &kp E    &kp A     &ecomm                           &edot  &kp H     &kp T     &kp S    &kp N    &eslash
&kp LSHFT &kp G  &kp X    &kp J    &kp K     &eexcl     &kp C_MUTE &none      &kp Q  &kp R     &kp M     &kp F    &kp P    &kp RSHFT
                 &kp LGUI &kp LALT &kp LCTRL &mo LOWER  &kp SPACE  &kp RET    &mo LOWER  &kp RCTRL &kp RALT  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            label = "LOWER";
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// | F1    |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
// |       |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
// |       |  -  |  @  |  #   |  $   |  +   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
// |       |  _  |  =  |  %   |  {   |  }   |        |  |       |      |  [    |  ]    |  <   |   >   |       |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&kp F1    &kp F2    &kp F3    &kp F4      &kp F5    &kp F6                    &kp F7    &kp F8   &kp F9    &kp F10    &kp F11   &kp F12
&none     &kp N1    &kp N2    &kp N3      &kp N4    &kp N5                    &kp N6    &kp N7   &kp N8    &kp N9    &kp N0    &none
&none     &kp MINUS &kp AT    &kp HASH    &kp DLLR  &kp PLUS                  &kp CARET &kp AMPS &kp STAR  &kp LPAR  &kp RPAR  &kp PIPE
&trans    &kp UNDER &kp EQUAL &kp PRCNT   &kp LBRC  &kp RBRC   &trans &trans  &none     &kp LBKT &kp RBKT  &kp LT    &kp GT    &none
                    &trans    &trans      &trans    &mo RAISE  &trans &trans  &mo RAISE &trans   &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            label = "RAISE";
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
// |       | INS  | PSCR | GUI   |       |      |                | PGUP | HOME |   ^   | END  |       |       |
// |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
// |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
//                |      |       |       |      |      |  |      |      |      |       |      |
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                  &none     &none     &none    &none     &none   &none
&trans     &kp INS      &kp PSCRN    &kp K_CMENU  &trans       &trans                        &kp PG_UP &kp HOME  &kp UP   &kp END   &none   &none
&trans     &kp LALT     &kp LCTRL    &kp LSHFT    &trans       &kp CLCK                      &kp PG_DN &kp LEFT  &kp DOWN &kp RIGHT &kp DEL &kp BSPC
&trans     &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &trans        &none   &none   &none     &none     &none    &none     &none   &none
                        &trans       &trans       &trans       &trans        &trans  &trans  &trans    &trans    &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
// ----------------------------------------------------------------------------------------------------------------------------------
// | USB/BT |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                   |       |       |        |       |        |        |
// |        | QWERTY  |         |         |         |         |                   |       |       |        |       |        |        |
// | EXTPWR |         |         |         | BROWSER |         |                   |       |       |        |       |        |        |
// | BT_CLR |         |         |         |         |         |         | |       |       |       |        |       |        |        |
//                    |         |         |         |         |         | |       |       |       |        |       |
            label = "ADJUST";
            bindings = <
&out OUT_TOG      &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4                            &none &none &none &none &none &none
&tog FUBAR        &tog QWERTY     &none           &none           &none           &none                                   &none &none &none &none &none &none
&ext_power EP_TOG &none           &none           &none           &tog BROWSER    &none                                   &none &none &none &none &none &none
&bt BT_CLR        &none           &none           &none           &none           &none            &none           &none  &none &none &none &none &none &none
                                  &none           &none           &none           &none            &none           &none  &none &none &none &none
            >;
        };

        qwerty_layer {
            label = "QWERTY";
// ------------------------------------------------------------------------------------------------------------
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
&kp GRAVE &kp N1 &kp N2   &kp N3   &kp N4    &kp N5                           &kp N6 &kp N7    &kp N8    &kp N9   &kp N0   &none
&kp ESC   &kp Q  &kp W    &kp E    &kp R     &kp T                            &kp Y  &kp U     &kp I     &kp O    &kp P    &kp BSPC
&kp TAB   &kp A  &kp S    &kp D    &kp F     &kp G                            &kp H  &kp J     &kp K     &kp L    &kp SEMI &kp SQT
&kp LSHFT &kp Z  &kp X    &kp C    &kp V     &kp B      &kp C_MUTE &none      &kp N  &kp M     &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
                 &kp LGUI &kp LALT &kp LCTRL &mo LOWER  &kp SPACE  &kp RET    &mo RAISE  &kp RCTRL &kp RALT  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        browser_layer {
            label = "BROWSER";
// ----------------------------------------------------------------------------------------------------------------------------------------------
// | BROWSER |         |         |         |         |         |                    |         |         |         |         |         |         |
// |         |         | CLOSE   |         |         |         |                    |         |         |         |         |         |         |
// |         | PG_UP   | PG_UP   | PREV    | NEXT    |         |                    |         |         |         |         |         |         |
// | LEFT    | RIGHT   |         | MOVE_L  | MOVE_R  |         |         | |        |         |         |         |         |         |         |
//                     |         |         |         |         |         | |        |         |         |         |         |

            bindings = <
&tog BROWSER &none     &none      &none       &none       &none                &none  &none &none &none &none &none
&none        &none     &web_close &none       &none       &none                &none  &none &none &none &none &none
&none        &kp PG_UP &kp PG_DN  &web_prev   &web_next   &none                &none  &none &none &none &none &none
&kp LEFT     &kp RIGHT &none      &web_m_prev &web_m_next &none  &none   &none &none  &none &none &none &none &none
                       &none      &none       &none       &trans &none   &none &trans &none &none &none
            >;
            sensor-bindings = <&inc_dec_kp PG_DN PG_UP &inc_dec_kp PG_UP PG_DN>;
        };

        fubar_layer {
            label = "FUBAR";
            bindings = <
&tog FUBAR   &none     &none          &none       &none       &none                &none  &none &none &none &none &none
&kp R        &kp E     &kp I          &kp S       &kp U       &kp B                &none  &none &none &none &none &none
&none        &none     &none          &none       &none       &none                &none  &none &none &none &none &none
&none        &none     &none          &none       &none       &none  &none   &none &none  &none &none &none &none &none
                       &kp LA(SYSREQ) &none       &none       &trans &none   &none &trans &none &none &none
            >;
            sensor-bindings = <&inc_dec_kp PG_DN PG_UP &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
